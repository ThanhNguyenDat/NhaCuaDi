{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\n// import { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\nconst bindMiddleware = middleware => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const {\n      composeWithDevTools\n    } = require(\"redux-devtools-extension\");\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n  return applyMiddleware(...middleware);\n};\nfunction configureStore() {\n  const middlewares = [];\n  const sagaMiddleware = createSagaMiddleware();\n  // if (process.env.NODE_ENV !== 'production' && process.browser) {\n  //   const loggerMiddleware = createLogger({\n  //     collapsed: (getState, action, logEntry) => !logEntry.error,\n  //   });\n  //   middlewares.push(loggerMiddleware);\n  // }\n  middlewares.push(sagaMiddleware);\n  const store = createStore(rootReducer, bindMiddleware(middlewares));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\nexport default configureStore;","map":{"version":3,"names":["createStore","applyMiddleware","createSagaMiddleware","rootReducer","rootSaga","bindMiddleware","middleware","process","env","NODE_ENV","composeWithDevTools","require","configureStore","middlewares","sagaMiddleware","push","store","sagaTask","run"],"sources":["/home/thanhnd13/Javascript/AILabTools/NhaCuaDi/frontend/src/redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\n// import { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst bindMiddleware = (middleware) => {\n    if (process.env.NODE_ENV !== \"production\") {\n        const { composeWithDevTools } = require(\"redux-devtools-extension\");\n        return composeWithDevTools(applyMiddleware(...middleware));\n    }\n    return applyMiddleware(...middleware);\n};\n\nfunction configureStore() {\n    const middlewares = [];\n    const sagaMiddleware = createSagaMiddleware();\n    // if (process.env.NODE_ENV !== 'production' && process.browser) {\n    //   const loggerMiddleware = createLogger({\n    //     collapsed: (getState, action, logEntry) => !logEntry.error,\n    //   });\n    //   middlewares.push(loggerMiddleware);\n    // }\n    middlewares.push(sagaMiddleware);\n    const store = createStore(rootReducer, bindMiddleware(middlewares));\n\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n\n    return store;\n}\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD;AACA,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,cAAc,GAAIC,UAAU,IAAK;EACnC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvC,MAAM;MAAEC;IAAoB,CAAC,GAAGC,OAAO,CAAC,0BAA0B,CAAC;IACnE,OAAOD,mBAAmB,CAACT,eAAe,CAAC,GAAGK,UAAU,CAAC,CAAC;EAC9D;EACA,OAAOL,eAAe,CAAC,GAAGK,UAAU,CAAC;AACzC,CAAC;AAED,SAASM,cAAcA,CAAA,EAAG;EACtB,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,cAAc,GAAGZ,oBAAoB,EAAE;EAC7C;EACA;EACA;EACA;EACA;EACA;EACAW,WAAW,CAACE,IAAI,CAACD,cAAc,CAAC;EAChC,MAAME,KAAK,GAAGhB,WAAW,CAACG,WAAW,EAAEE,cAAc,CAACQ,WAAW,CAAC,CAAC;EAEnEG,KAAK,CAACC,QAAQ,GAAGH,cAAc,CAACI,GAAG,CAACd,QAAQ,CAAC;EAE7C,OAAOY,KAAK;AAChB;AAEA,eAAeJ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}