{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { signInRequest, getLoginInfo } from \"../../services/api\";\nimport { callbackSuccess, callbackError } from \"../helpers\";\nimport { SIGN_IN_ASYNC, GET_LOGIN_INFO_ASYNC } from \"./authActions\";\nfunction handleGeSignIn(_ref) {\n  let {\n    ctx\n  } = _ref;\n  return function* () {\n    try {\n      var _ctx$username, _ctx$password;\n      const username = (_ctx$username = ctx === null || ctx === void 0 ? void 0 : ctx.username) !== null && _ctx$username !== void 0 ? _ctx$username : \"\";\n      const password = (_ctx$password = ctx === null || ctx === void 0 ? void 0 : ctx.password) !== null && _ctx$password !== void 0 ? _ctx$password : \"\";\n      yield put({\n        type: SIGN_IN_ASYNC.START\n      });\n      const result = yield call(signInRequest, {\n        username,\n        password\n      });\n      yield put({\n        type: SIGN_IN_ASYNC.SUCCESS,\n        data: result\n      }); // why put but dont ????\n\n      // set tam cho nay nao co cach optimize hon thi lam => cach nay ngu qua\n      document.cookie = `access_token=${result.access_token}`;\n      callbackSuccess(ctx, result); // why error system?\n    } catch (err) {\n      callbackError(ctx, err);\n    }\n  }();\n}\nfunction handleGetLoginInfoInfo(_ref2) {\n  let {\n    ctx\n  } = _ref2;\n  return function* () {\n    try {\n      yield put({\n        type: GET_LOGIN_INFO_ASYNC.START\n      });\n      const result = yield call(getLoginInfo);\n      yield put({\n        type: GET_LOGIN_INFO_ASYNC.SUCCESS,\n        data: result\n      });\n      callbackSuccess(ctx, result);\n    } catch (err) {\n      console.error(err);\n      callbackError(ctx, err);\n    }\n  }();\n}\nexport default function* auth() {\n  yield takeLatest(SIGN_IN_ASYNC.HANDLER, handleGeSignIn);\n  yield takeLatest(GET_LOGIN_INFO_ASYNC.HANDLER, handleGetLoginInfoInfo);\n}","map":{"version":3,"names":["takeLatest","call","put","signInRequest","getLoginInfo","callbackSuccess","callbackError","SIGN_IN_ASYNC","GET_LOGIN_INFO_ASYNC","handleGeSignIn","_ref","ctx","_ctx$username","_ctx$password","username","password","type","START","result","SUCCESS","data","document","cookie","access_token","err","handleGetLoginInfoInfo","_ref2","console","error","auth","HANDLER"],"sources":["/home/thanhnd13/Javascript/AILabTools/NhaCuaDi/frontend/src/redux/auth/authSaga.js"],"sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\n\nimport { signInRequest, getLoginInfo } from \"../../services/api\";\n\nimport { callbackSuccess, callbackError } from \"../helpers\";\nimport { SIGN_IN_ASYNC, GET_LOGIN_INFO_ASYNC } from \"./authActions\";\n\nfunction* handleGeSignIn({ ctx }) {\n    try {\n        const username = ctx?.username ?? \"\";\n        const password = ctx?.password ?? \"\";\n        yield put({ type: SIGN_IN_ASYNC.START });\n        const result = yield call(signInRequest, { username, password });\n        yield put({ type: SIGN_IN_ASYNC.SUCCESS, data: result }); // why put but dont ????\n\n        // set tam cho nay nao co cach optimize hon thi lam => cach nay ngu qua\n        document.cookie = `access_token=${result.access_token}`;\n\n        callbackSuccess(ctx, result); // why error system?\n    } catch (err) {\n        callbackError(ctx, err);\n    }\n}\n\nfunction* handleGetLoginInfoInfo({ ctx }) {\n    try {\n        yield put({ type: GET_LOGIN_INFO_ASYNC.START });\n        const result = yield call(getLoginInfo);\n        yield put({ type: GET_LOGIN_INFO_ASYNC.SUCCESS, data: result });\n        callbackSuccess(ctx, result);\n    } catch (err) {\n        console.error(err);\n        callbackError(ctx, err);\n    }\n}\n\nexport default function* auth() {\n    yield takeLatest(SIGN_IN_ASYNC.HANDLER, handleGeSignIn);\n    yield takeLatest(GET_LOGIN_INFO_ASYNC.HANDLER, handleGetLoginInfoInfo);\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAE1D,SAASC,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAEhE,SAASC,eAAe,EAAEC,aAAa,QAAQ,YAAY;AAC3D,SAASC,aAAa,EAAEC,oBAAoB,QAAQ,eAAe;AAEnE,SAAUC,cAAcA,CAAAC,IAAA;EAAA,IAAC;IAAEC;EAAI,CAAC,GAAAD,IAAA;EAAA,oBAAE;IAC9B,IAAI;MAAA,IAAAE,aAAA,EAAAC,aAAA;MACA,MAAMC,QAAQ,IAAAF,aAAA,GAAGD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,QAAQ,cAAAF,aAAA,cAAAA,aAAA,GAAI,EAAE;MACpC,MAAMG,QAAQ,IAAAF,aAAA,GAAGF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEI,QAAQ,cAAAF,aAAA,cAAAA,aAAA,GAAI,EAAE;MACpC,MAAMX,GAAG,CAAC;QAAEc,IAAI,EAAET,aAAa,CAACU;MAAM,CAAC,CAAC;MACxC,MAAMC,MAAM,GAAG,MAAMjB,IAAI,CAACE,aAAa,EAAE;QAAEW,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAChE,MAAMb,GAAG,CAAC;QAAEc,IAAI,EAAET,aAAa,CAACY,OAAO;QAAEC,IAAI,EAAEF;MAAO,CAAC,CAAC,CAAC,CAAC;;MAE1D;MACAG,QAAQ,CAACC,MAAM,GAAI,gBAAeJ,MAAM,CAACK,YAAa,EAAC;MAEvDlB,eAAe,CAACM,GAAG,EAAEO,MAAM,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVlB,aAAa,CAACK,GAAG,EAAEa,GAAG,CAAC;IAC3B;EACJ,CAAC;AAAA;AAED,SAAUC,sBAAsBA,CAAAC,KAAA;EAAA,IAAC;IAAEf;EAAI,CAAC,GAAAe,KAAA;EAAA,oBAAE;IACtC,IAAI;MACA,MAAMxB,GAAG,CAAC;QAAEc,IAAI,EAAER,oBAAoB,CAACS;MAAM,CAAC,CAAC;MAC/C,MAAMC,MAAM,GAAG,MAAMjB,IAAI,CAACG,YAAY,CAAC;MACvC,MAAMF,GAAG,CAAC;QAAEc,IAAI,EAAER,oBAAoB,CAACW,OAAO;QAAEC,IAAI,EAAEF;MAAO,CAAC,CAAC;MAC/Db,eAAe,CAACM,GAAG,EAAEO,MAAM,CAAC;IAChC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVG,OAAO,CAACC,KAAK,CAACJ,GAAG,CAAC;MAClBlB,aAAa,CAACK,GAAG,EAAEa,GAAG,CAAC;IAC3B;EACJ,CAAC;AAAA;AAED,eAAe,UAAUK,IAAIA,CAAA,EAAG;EAC5B,MAAM7B,UAAU,CAACO,aAAa,CAACuB,OAAO,EAAErB,cAAc,CAAC;EACvD,MAAMT,UAAU,CAACQ,oBAAoB,CAACsB,OAAO,EAAEL,sBAAsB,CAAC;AAC1E"},"metadata":{},"sourceType":"module","externalDependencies":[]}